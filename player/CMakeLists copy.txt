cmake_minimum_required(VERSION 3.25)

project(
  Player
  VERSION 0.3
  LANGUAGES CXX)


# remove yaml for micro controllers

# include yaml
# add_definitions("-std=c++17" "-DDATA_DIR=\"${PROJECT_SOURCE_DIR}/test_data\"")
add_definitions("-std=c++14" "-DMICRO_CONTROLLER")

add_library(PlayerLib

  # src/esphome/components/light/esp_hsv_color.cpp
  # src/esphome/components/light/esp_hsv_color.h
  # src/esphome/core/color.h
  # src/esphome/core/helpers.h
  # src/esphome/core/optional.h
  src/base.h
  src/RGBColor.h
  src/RGBColor.cpp
  src/HSVColor.h
  src/HSVColor.cpp
  src/Chroma.h
  src/Chroma.cpp
  src/Grid.h
  src/Grid.cpp
  src/Layer.h
  src/Layer.cpp
  src/Frame.h
  src/Frame.cpp
  src/PaletteColor.h
  src/PaletteColor.cpp
  src/Palette.h
  src/Palette.cpp
  src/Filer.h
  src/Filer.cpp
  src/DisplayANSI.h
  src/HostLight.h
)

add_executable(glow
  src/glow.cpp
  src/palette_builder.h
  src/palette_builder.cpp
)

# method 1 conan.cmake generator
# include(${CMAKE_BINARY_DIR}/conanbuildinfo.cmake)
# conan_basic_setup()
# if(TARGET yaml-cpp)
# target_link_libraries(glow ${yaml-cpp_LIBRARIES} GlowLib)

# if(TARGET Catch2)
# add_subdirectory(test)
# endif()
# endif()

# method 2 conan.cmake_find_package generator
find_package(yaml-cpp)
find_package(Catch2)
find_package(nlohmann_json)
find_package(cxxopts)

# find_package(cxxopts)
include_directories(
  ${yaml-cpp_INCLUDE_DIRS}
  ${nlohmann_json_INCLUDE_DIRS}
  ${cxxopts_INCLUDE_DIRS}
)

# target_link_libraries(${PROJECT_NAME} ${yaml-cpp_LIBRARIES} ${cxxopts_LIBRARIES} GlowLib)
target_link_libraries(glow
  ${yaml-cpp_LIBRARIES}
  nlohmann_json::nlohmann_json
  cxxopts::cxxopts
  GlowLib
)

add_subdirectory(test)
